"""Creat_table

Revision ID: 227e3f859a5c
Revises: 
Create Date: 2024-04-18 11:22:07.167599

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "227e3f859a5c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "logging_download",
        sa.Column("id", sa.Date(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("count_sensors", sa.Integer(), nullable=False),
        sa.Column("status", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "type_sensor",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_zgd",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("block_zgd", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sensors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("pk_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_id"], ["type_sensor.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "historydata",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("pk_name", sa.String(), nullable=False),
        sa.Column("sensor_id", sa.Integer(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("min_value", sa.Float(), nullable=False),
        sa.Column("avg_value", sa.Float(), nullable=False),
        sa.Column("max_value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sensor_id"], ["sensors.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["type_id"], ["type_sensor.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("historydata")
    op.drop_table("sensors")
    op.drop_table("user_zgd")
    op.drop_table("type_sensor")
    op.drop_table("logging_download")
    # ### end Alembic commands ###
